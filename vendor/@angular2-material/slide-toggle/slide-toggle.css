/**
 * Mixin that creates a new stacking context.
 * see https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Positioning/Understanding_z_index/The_stacking_context
 */
/**
 * This mixin hides an element visually.
 * That means it's still accessible for screen-readers but not visible in view.
 */
/**
 * Forces an element to grow to fit floated contents; used as as an alternative to
 * `overflow: hidden;` because it doesn't cut off contents.
 */
/**
 * A mixin, which generates temporary ink ripple on a given component.
 * When $bindToParent is set to true, it will check for the focused class on the same selector as you included
 * that mixin.
 * It is also possible to specify the color palette of the temporary ripple. By default it uses the
 * accent palette for its background.
 */
/**
 * A collection of mixins and CSS classes that can be used to apply elevation to a material
 * element.
 * See: https://www.google.com/design/spec/what-is-material/elevation-shadows.html
 * Examples:
 *
 *
 * .md-foo {
 *   @include $md-elevation(2);
 *
 *   &:active {
 *     @include $md-elevation(8);
 *   }
 * }
 *
 * <div id="external-card" class="md-elevation-z2"><p>Some content</p></div>
 *
 * For an explanation of the design behind how elevation is implemented, see the design doc at
 * https://goo.gl/Kq0k9Z.
 */
/**
 * The css property used for elevation. In most cases this should not be changed. It is exposed
 * as a variable for abstraction / easy use when needing to reference the property directly, for
 * example in a will-change rule.
 */
/** The default duration value for elevation transitions. */
/** The default easing value for elevation transitions. */
/**
 * Applies the correct css rules to an element to give it the elevation specified by $zValue.
 * The $zValue must be between 0 and 24.
 */
/**
 * Returns a string that can be used as the value for a transition property for elevation.
 * Calling this function directly is useful in situations where a component needs to transition
 * more than one property.
 *
 * .foo {
 *   transition: md-elevation-transition-property-value(), opacity 100ms ease;
 *   will-change: $md-elevation-property, opacity;
 * }
 */
/**
 * Applies the correct css rules needed to have an element transition between elevations.
 * This mixin should be applied to elements whose elevation values will change depending on their
 * context (e.g. when active or disabled).
 */
:host {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  height: 24px;
  margin: 16px 0;
  line-height: 24px;
  white-space: nowrap;
  -webkit-user-select: none;
     -moz-user-select: none;
      -ms-user-select: none;
          user-select: none;
  outline: none; }
  :host.md-checked .md-slide-toggle-thumb-container {
    -webkit-transform: translate3d(100%, 0, 0);
            transform: translate3d(100%, 0, 0); }
  :host.md-checked .md-slide-toggle-thumb {
    background-color: #9c27b0; }
  :host.md-checked .md-slide-toggle-bar {
    background-color: rgba(156, 39, 176, 0.5); }
  :host .md-ink-ripple {
    border-radius: 50%;
    opacity: 0;
    height: 48px;
    left: 50%;
    overflow: hidden;
    pointer-events: none;
    position: absolute;
    top: 50%;
    -webkit-transform: translate(-50%, -50%);
            transform: translate(-50%, -50%);
    -webkit-transition: opacity ease 280ms, background-color ease 280ms;
    transition: opacity ease 280ms, background-color ease 280ms;
    width: 48px; }
  :host.md-slide-toggle-focused .md-ink-ripple {
    opacity: 1;
    background-color: rgba(156, 39, 176, 0.26); }
  :host.md-slide-toggle-disabled .md-ink-ripple {
    background-color: #000; }
  :host.md-slide-toggle-focused:not(.md-checked) .md-ink-ripple {
    background-color: rgba(0, 0, 0, 0.12); }
  :host.md-primary.md-checked .md-slide-toggle-thumb {
    background-color: #009688; }
  :host.md-primary.md-checked .md-slide-toggle-bar {
    background-color: rgba(0, 150, 136, 0.5); }
  :host.md-primary .md-ink-ripple {
    border-radius: 50%;
    opacity: 0;
    height: 48px;
    left: 50%;
    overflow: hidden;
    pointer-events: none;
    position: absolute;
    top: 50%;
    -webkit-transform: translate(-50%, -50%);
            transform: translate(-50%, -50%);
    -webkit-transition: opacity ease 280ms, background-color ease 280ms;
    transition: opacity ease 280ms, background-color ease 280ms;
    width: 48px; }
  :host.md-primary.md-slide-toggle-focused .md-ink-ripple {
    opacity: 1;
    background-color: rgba(0, 150, 136, 0.26); }
  :host.md-primary.md-slide-toggle-disabled .md-ink-ripple {
    background-color: #000; }
  :host.md-primary.md-slide-toggle-focused:not(.md-checked) .md-ink-ripple {
    background-color: rgba(0, 0, 0, 0.12); }
  :host.md-warn.md-checked .md-slide-toggle-thumb {
    background-color: #f44336; }
  :host.md-warn.md-checked .md-slide-toggle-bar {
    background-color: rgba(244, 67, 54, 0.5); }
  :host.md-warn .md-ink-ripple {
    border-radius: 50%;
    opacity: 0;
    height: 48px;
    left: 50%;
    overflow: hidden;
    pointer-events: none;
    position: absolute;
    top: 50%;
    -webkit-transform: translate(-50%, -50%);
            transform: translate(-50%, -50%);
    -webkit-transition: opacity ease 280ms, background-color ease 280ms;
    transition: opacity ease 280ms, background-color ease 280ms;
    width: 48px; }
  :host.md-warn.md-slide-toggle-focused .md-ink-ripple {
    opacity: 1;
    background-color: rgba(244, 67, 54, 0.26); }
  :host.md-warn.md-slide-toggle-disabled .md-ink-ripple {
    background-color: #000; }
  :host.md-warn.md-slide-toggle-focused:not(.md-checked) .md-ink-ripple {
    background-color: rgba(0, 0, 0, 0.12); }
  :host.md-disabled .md-slide-toggle-label, :host.md-disabled .md-slide-toggle-container {
    cursor: default; }
  :host.md-disabled .md-slide-toggle-thumb {
    background-color: #bdbdbd; }
  :host.md-disabled .md-slide-toggle-bar {
    background-color: rgba(0, 0, 0, 0.12); }

.md-slide-toggle-content {
  font-size: 14px;
  font-family: Roboto, "Helvetica Neue", sans-serif;
  font-weight: 500; }

.md-slide-toggle-label {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-flex: 1;
      -ms-flex: 1;
          flex: 1;
  cursor: pointer; }

.md-slide-toggle-container {
  cursor: -webkit-grab;
  cursor: grab;
  width: 36px;
  height: 24px;
  position: relative;
  -webkit-user-select: none;
     -moz-user-select: none;
      -ms-user-select: none;
          user-select: none;
  margin-right: 8px; }

.md-slide-toggle-thumb-container {
  position: absolute;
  top: 2px;
  left: 0;
  z-index: 1;
  width: 16px;
  -webkit-transform: translate3d(0, 0, 0);
          transform: translate3d(0, 0, 0);
  -webkit-transition: all 80ms linear;
  transition: all 80ms linear;
  -webkit-transition-property: -webkit-transform;
  transition-property: -webkit-transform;
  transition-property: transform;
  transition-property: transform, -webkit-transform; }

.md-slide-toggle-thumb {
  position: absolute;
  margin: 0;
  left: 0;
  top: 0;
  height: 20px;
  width: 20px;
  border-radius: 50%;
  background-color: #fafafa;
  box-shadow: 0px 2px 1px -1px rgba(0, 0, 0, 0.2), 0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 1px 3px 0px rgba(0, 0, 0, 0.12); }

.md-slide-toggle-bar {
  position: absolute;
  left: 1px;
  top: 5px;
  width: 34px;
  height: 14px;
  background-color: #9e9e9e;
  border-radius: 8px; }

.md-slide-toggle-checkbox {
  border: 0;
  clip: rect(0 0 0 0);
  height: 1px;
  margin: -1px;
  overflow: hidden;
  padding: 0;
  position: absolute;
  text-transform: none;
  width: 1px; }

.md-slide-toggle-bar,
.md-slide-toggle-thumb {
  -webkit-transition: all 80ms linear;
  transition: all 80ms linear;
  -webkit-transition-property: background-color;
  transition-property: background-color;
  -webkit-transition-delay: 50ms;
          transition-delay: 50ms; }
